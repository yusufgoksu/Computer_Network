import socket

class WebClient_advance:
    def __init__(self, host, port=80):
        self.host = host
        self.port = port

    def web_client_advance(self, path="/"):
        client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

        try:
            # Connect to the server
            client_socket.connect((self.host, self.port))
            print(f" Connection successful: {self.host}:{self.port}")

            # Create HTTP GET request
            http_request = f"GET {path} HTTP/1.1\r\nHost: {self.host}\r\nConnection: close\r\n\r\n"
            client_socket.sendall(http_request.encode())

            response = b""  # Variable to store the response in byte format
            while True:
                data = client_socket.recv(4096)  # Receive data in 4 KB blocks
                if not data:
                    break
                response += data

            # Decode the response
            response_str = response.decode(errors="ignore")
            print("\n---  Response from the server ---")
            print(response_str)  # Print the server response

            # If the response is a redirect, send a request to the new URL
            if "HTTP/1.1 302" in response_str:
                location = self._extract_location(response_str)
                if location:
                    print(f"Redirect found, new URL: {location}")
                    return self.web_client_advance(location.lstrip('/'))  # Follow the redirected page

            return response_str

        except Exception as e:
            print(f" Error occurred: {e}")
            return None

        finally:
            client_socket.close()
            print("Connection closed.")

    def _extract_location(self, response):
        """Extract the Location header from the HTTP response."""
        lines = response.split("\r\n")
        for line in lines:
            if line.lower().startswith("location:"):
                return line.split(":", 1)[1].strip()
        return None


if __name__ == "__main__":
    # Connect to the local server and send an HTTP request
    print("---- Connecting to local server ----")
    client = WebClient_advance("127.0.0.1", 80)  # Connect to the local Apache server
    response = client.web_client_advance("/")  # Use "/" for the homepage

    if response:
        print("\n---  Response from the server ---\n")
        print(response)
